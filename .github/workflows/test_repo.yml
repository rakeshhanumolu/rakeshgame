name: Build and Deploy to EKS

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          mvn test package
          echo "Maven build and tests complete."

      - name: List build directory contents
        run: |
          echo "Listing the build directory contents..."
          ls -R $(pwd)

      - name: Set version and update version.txt
        id: set-version
        run: |
          if [ ! -f version.txt ]; then
              echo "1.0.1" > version.txt
          fi
          VERSION_NUMBER=$(cat version.txt)
          IFS='.' read -r major minor patch <<< "$VERSION_NUMBER"
          patch=$((patch + 1))
          NEW_VERSION="${major}.${minor}.${patch}"
          
          echo $NEW_VERSION > version.txt
          
          echo "Using version: $NEW_VERSION"
          echo "New version saved in version.txt: $NEW_VERSION"
          
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
        shell: bash

      - name: Login to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 825765405225.dkr.ecr.us-east-1.amazonaws.com

      - name: Build, tag, and push Docker image
        run: |
          docker build -t rakeshecr .
          docker tag rakeshecr:latest 825765405225.dkr.ecr.us-east-1.amazonaws.com/rakeshecr:latest
          docker push 825765405225.dkr.ecr.us-east-1.amazonaws.com/rakeshecr:latest

      - name: Save Docker image as tar
        run: |
          docker save -o rakeshecr.tar rakeshecr:latest
          echo "Docker image saved as rakeshecr.tar"

      - name: Upload Docker image to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp rakeshecr.tar s3://bhairavatv1/rakeshecr_${{ env.NEW_VERSION }}.tar --region us-east-1

      - name: Install AWS CLI and kubectl
        run: |
          curl "https://d1wni0z3s2f9g7.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          sudo apt-get install -y kubectl

      - name: Download Docker image from S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp s3://bhairavatv1/rakeshecr_${{ env.NEW_VERSION }}.tar ./rakeshecr.tar --region us-east-1
          echo "Docker image downloaded from S3."

      - name: Load Docker image
        run: |
          docker load -i rakeshecr.tar
          echo "Docker image loaded."

      - name: Update Kubernetes deployment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          KUBECONFIG: ${{ secrets.KUBECONFIG }}  # You may need to set this secret
        run: |
          kubectl set image deployment/rakeshecr rakeshecr=825765405225.dkr.ecr.us-east-1.amazonaws.com/rakeshecr:latest
          kubectl rollout status deployment/rakeshecr
          echo "Kubernetes deployment updated."
